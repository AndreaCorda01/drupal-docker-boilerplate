events {
    worker_connections  1024;
}

http {
    sendfile on;
    tcp_nopush on;
    types_hash_max_size 2048;
    server_tokens off; # Hide Nginx version info
    client_max_body_size 100M;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Redirect HTTP to HTTPS with www
    server {
        listen 80;
        listen [::]:80;
        server_name YOURWEBSITE www.YOURWEBSITE;
        return 301 https://www.YOURWEBSITE$request_uri;
    }

    # Redirect non-www to www on HTTPS
    # Comment in case you want to disable the SSL

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name YOURWEBSITE.org;

        ssl_certificate /etc/letsencrypt/live/YOURWEBSITE.org/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/YOURWEBSITE.org/privkey.pem;

        return 301 https://www.YOURWEBSITE.org$request_uri;
    }

    # Main server block for the website
    #
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name www.YOURWEBSITE.org;

        root /var/www/html/web;
        index index.php index.html index.htm;

        ssl_certificate /etc/letsencrypt/live/www.YOURWEBSITE.org/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/www.YOURWEBSITE.org/privkey.pem;

        #ssl_protocols TLSv1.2 TLSv1.3;
        #ssl_prefer_server_ciphers on;
        #ssl_ciphers HIGH:!aNULL:!MD5;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options "nosniff";
        add_header X-XSS-Protection "1; mode=block";
        

        # Allow Let's Encrypt renewal requests
        location ~* ^/.well-known/acme-challenge/ {
            allow all;
        }

        # Prevent access to sensitive files
        location ~* \.(engine|inc|install|make|module|profile|sh|sql|theme|twig|tpl|xtmpl|yml|ini|log|backup)$ {
            deny all;
            return 404;
        }

        # Block access to private and hidden files
        location ~ (^|/)\. {
            return 403;
        }

        # Block direct access to PHP scripts in certain directories
        location ~ ^/sites/.*/private/ {
            return 403;
        }

        location ~ ^/sites/[^/]+/files/.*\.php$ {
            deny all;
        }

        # PHP processing (Drupal)
        location ~ \.php$ {
            include fastcgi_params;
            fastcgi_pass drupal:9000;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_intercept_errors on;

            # Timeout settings
            fastcgi_read_timeout 300;
            fastcgi_send_timeout 300;
            fastcgi_connect_timeout 60;
        }

        # Drupal Clean URLs
        location / {
            try_files $uri /index.php?$query_string;
        }

        # Cache static files
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|otf|eot|mp4|webm|ogg|webp)$ {
            expires max;
            log_not_found off;
            add_header Cache-Control "public";
        }

        # Deny access to vendor PHP files (security best practice)
        location ~ /vendor/.*\.php$ {
            deny all;
            return 404;
        }

        # Deny access to Git or SVN repositories
        location ~* /\.(git|svn) {
            deny all;
        }

        # Redirect legacy index.php URLs to clean URLs
        if ($request_uri ~* "^(.*/)index\.php/(.*)") {
            return 307 $1$2;
        }
    }
}
